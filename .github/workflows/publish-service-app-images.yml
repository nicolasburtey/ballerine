name: Build Docker images and push to Dockerhub

on:
  workflow_dispatch:

  push:
    branches: [main, dev, test]

env:
  REGISTRY: ghcr.io
  WORKFLOW_SERVICE_IMAGE_NAME: ${{ github.repository_owner }}/workflows-service
  WEBSOCKET_SERVICE_IMAGE_NAME: ${{ github.repository_owner }}/websocket-service
  BACKOFFICE_APP_IMAGE_NAME: ${{ github.repository_owner }}/backoffice-app
  WORKFLOW_DASHBOARD_APP_IMAGE_NAME: ${{ github.repository_owner }}/workflows-dashboard-app
  HEADLESS_EXAMPLE_IMAGE_NAME: ${{ github.repository_owner }}/headless-example
  DEV_IMAGE_TAG: dev
  PROD_IMAGE_TAG: latest
  TEST_IMAGE_TAG: test

jobs:
  build-workflow-services:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install jq
        run: sudo apt-get install jq

      - name: Get package version from package.json
        id: get_version
        run: |
          PACKAGE_VERSION=$(jq -r '.version' services/workflows-service/package.json)
          echo "::set-output name=version::$PACKAGE_VERSION"

      - name: Login to Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push workflow-services dev image to Github repo with commit tag
        if: github.ref == 'refs/heads/dev'
        uses: docker/build-push-action@v4
        with:
          context: services/workflows-service
          push: true
          tags: |
            ${{ env.WORKFLOW_SERVICE_IMAGE_NAME }}:${{ github.sha }}
            ${{ env.WORKFLOW_SERVICE_IMAGE_NAME }}:${{ env.DEV_IMAGE_TAG }}

      - name: Push workflow-services test image to Github repo with commit tag
        if: github.ref == 'refs/heads/test'
        uses: docker/build-push-action@v4
        with:
          context: services/workflows-service
          push: true
          tags: |
            ${{ env.WORKFLOW_SERVICE_IMAGE_NAME }}:${{ github.sha }}
            ${{ env.WORKFLOW_SERVICE_IMAGE_NAME }}:${{ env.TEST_IMAGE_TAG }}

      - name: Push workflow-services prod image to Github repo with commit tag
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v4
        with:
          context: services/workflows-service
          push: true
          tags: |
            ${{ env.WORKFLOW_SERVICE_IMAGE_NAME }}:${{ github.sha }}
            ${{ env.WORKFLOW_SERVICE_IMAGE_NAME }}:${{ steps.get_version.outputs.version }}
            ${{ env.WORKFLOW_SERVICE_IMAGE_NAME }}:${{ env.PROD_IMAGE_TAG }}

  build-websocket-services:
      runs-on: ubuntu-latest
      permissions:
        contents: read
        packages: write

      steps:
        - name: Checkout repository
          uses: actions/checkout@v3

        - name: Install jq
          run: sudo apt-get install jq

        - name: Get package version from package.json
          id: get_version
          run: |
            PACKAGE_VERSION=$(jq -r '.version' services/websocket-service/package.json)
            echo "::set-output name=version::$PACKAGE_VERSION"

        - name: Login to Container registry
          uses: docker/login-action@v2
          with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Push websocket-services dev image to Github repo with commit tag
          if: github.ref == 'refs/heads/dev'
          uses: docker/build-push-action@v4
          with:
            context: services/websocket-service
            push: true
            tags: |
              ${{ env.WEBSOCKET_SERVICE_IMAGE_NAME }}:${{ github.sha }}
              ${{ env.WEBSOCKET_SERVICE_IMAGE_NAME }}:${{ env.DEV_IMAGE_TAG }}

        - name: Push websocket-services test image to Github repo with commit tag
          if: github.ref == 'refs/heads/test'
          uses: docker/build-push-action@v4
          with:
            context: services/websocket-service
            push: true
            tags: |
              ${{ env.WEBSOCKET_SERVICE_IMAGE_NAME }}:${{ github.sha }}
              ${{ env.WEBSOCKET_SERVICE_IMAGE_NAME }}:${{ env.TEST_IMAGE_TAG }}

        - name: Push websocket-services prod image to Github repo with commit tag
          if: github.ref == 'refs/heads/main'
          uses: docker/build-push-action@v4
          with:
            context: services/websocket-service
            push: true
            tags: |
              ${{ env.WEBSOCKET_SERVICE_IMAGE_NAME }}:${{ github.sha }}
              ${{ env.WEBSOCKET_SERVICE_IMAGE_NAME }}:${{ steps.get_version.outputs.version }}
              ${{ env.WEBSOCKET_SERVICE_IMAGE_NAME }}:${{ env.PROD_IMAGE_TAG }}

  build-headless-examples:
      runs-on: ubuntu-latest
      permissions:
        contents: read
        packages: write

      steps:
        - name: Checkout repository
          uses: actions/checkout@v3

        - name: Install jq
          run: sudo apt-get install jq

        - name: Get package version from package.json
          id: get_version
          run: |
            PACKAGE_VERSION=$(jq -r '.version' examples/headless-example/package.json)
            echo "::set-output name=version::$PACKAGE_VERSION"

        - name: Login to Container registry
          uses: docker/login-action@v2
          with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Push headless-example dev image to Github repo with commit tag
          if: github.ref == 'refs/heads/dev'
          uses: docker/build-push-action@v4
          with:
            context: examples/headless-example
            push: true
            tags: |
              ${{ env.HEADLESS_EXAMPLE_IMAGE_NAME}}:${{ github.sha }}
              ${{ env.HEADLESS_EXAMPLE_IMAGE_NAME}}:${{ env.DEV_IMAGE_TAG }}

        - name: Push headless-example  test image to Github repo with commit tag
          if: github.ref == 'refs/heads/test'
          uses: docker/build-push-action@v4
          with:
            context: examples/headless-example
            push: true
            tags: |
              ${{ env.HEADLESS_EXAMPLE_IMAGE_NAME}}:${{ github.sha }}
              ${{ env.HEADLESS_EXAMPLE_IMAGE_NAME}}:${{ env.TEST_IMAGE_TAG }}

        - name: Push headless-example prod image to Github repo with commit tag
          if: github.ref == 'refs/heads/main'
          uses: docker/build-push-action@v4
          with:
            context: examples/headless-example
            push: true
            tags: |
              ${{ env.HEADLESS_EXAMPLE_IMAGE_NAME}}:${{ github.sha }}
              ${{ env.HEADLESS_EXAMPLE_IMAGE_NAME}}:${{ steps.get_version.outputs.version }}
              ${{ env.HEADLESS_EXAMPLE_IMAGE_NAME}}:${{ env.PROD_IMAGE_TAG }}

  build-backoffice:
      runs-on: ubuntu-latest
      permissions:
        contents: read
        packages: write

      steps:
        - name: Checkout repository
          uses: actions/checkout@v3

        - name: Install jq
          run: sudo apt-get install jq

        - name: Get package version from package.json
          id: get_version
          run: |
            PACKAGE_VERSION=$(jq -r '.version' apps/backoffice-v2/package.json)
            echo "::set-output name=version::$PACKAGE_VERSION"

        - name: Login to Container registry
          uses: docker/login-action@v2
          with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Push backoffice-app dev image to Github repo with commit tag
          if: github.ref == 'refs/heads/dev'
          uses: docker/build-push-action@v4
          with:
            context: apps/backoffice-v2
            push: true
            tags: |
              ${{ env.BACKOFFICE_APP_IMAGE_NAME }}:${{ github.sha }}
              ${{ env.BACKOFFICE_APP_IMAGE_NAME }}:${{ env.DEV_IMAGE_TAG }}

        - name: Push backoffice-app test image to Github repo with commit tag
          if: github.ref == 'refs/heads/test'
          uses: docker/build-push-action@v4
          with:
            context: apps/backoffice-v2
            push: true
            tags: |
              ${{ env.BACKOFFICE_APP_IMAGE_NAME }}:${{ github.sha }}
              ${{ env.BACKOFFICE_APP_IMAGE_NAME }}:${{ env.TEST_IMAGE_TAG }}

        - name: Push backoffice-app prod image to Github repo with commit tag
          if: github.ref == 'refs/heads/main'
          uses: docker/build-push-action@v4
          with:
            context: apps/backoffice-v2
            push: true
            tags: |
              ${{ env.BACKOFFICE_APP_IMAGE_NAME }}:${{ github.sha }}
              ${{ env.BACKOFFICE_APP_IMAGE_NAME }}:${{ steps.get_version.outputs.version }}
              ${{ env.BACKOFFICE_APP_IMAGE_NAME }}:${{ env.PROD_IMAGE_TAG }}

  build-workflows-dashboard:
      runs-on: ubuntu-latest
      permissions:
        contents: read
        packages: write

      steps:
        - name: Checkout repository
          uses: actions/checkout@v3

        - name: Install jq
          run: sudo apt-get install jq

        - name: Get package version from package.json
          id: get_version
          run: |
            PACKAGE_VERSION=$(jq -r '.version' apps/workflows-dashboard/package.json)
            echo "::set-output name=version::$PACKAGE_VERSION"

        - name: Login to Container registry
          uses: docker/login-action@v2
          with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Push workflow-dashboard dev image to Github repo with commit tag
          if: github.ref == 'refs/heads/dev'
          uses: docker/build-push-action@v4
          with:
            context: apps/workflows-dashboard
            push: true
            tags: |
              ${{ env.WORKFLOW_DASHBOARD_APP_IMAGE_NAME}}:${{ github.sha }}
              ${{ env.WORKFLOW_DASHBOARD_APP_IMAGE_NAME}}:${{ env.DEV_IMAGE_TAG }}

        - name: Push workflow-dashboard test image to Github repo with commit tag
          if: github.ref == 'refs/heads/test'
          uses: docker/build-push-action@v4
          with:
            context: apps/workflows-dashboard
            push: true
            tags: |
              ${{ env.WORKFLOW_DASHBOARD_APP_IMAGE_NAME}}:${{ github.sha }}
              ${{ env.WORKFLOW_DASHBOARD_APP_IMAGE_NAME}}:${{ env.TEST_IMAGE_TAG }}

        - name: Push workflow-dashboard prod image to Github repo with commit tag
          if: github.ref == 'refs/heads/main'
          uses: docker/build-push-action@v4
          with:
            context: apps/workflows-dashboard
            push: true
            tags: |
              ${{ env.WORKFLOW_DASHBOARD_APP_IMAGE_NAME}}:${{ github.sha }}
              ${{ env.WORKFLOW_DASHBOARD_APP_IMAGE_NAME}}:${{ steps.get_version.outputs.version }}
              ${{ env.WORKFLOW_DASHBOARD_APP_IMAGE_NAME}}:${{ env.PROD_IMAGE_TAG }}
